#!/bin/bash
# WARNING: this script will destroy data on the selected disk.
# This script can be run by executing the following:
#   curl -sL https://git.io/fhiYQ | bash
set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

### Set up logging ###
exec 1> >(tee "stdout.log")
exec 2> >(tee "stderr.log")

### Get infomation from user ###
hostname=$(dialog --stdout --inputbox "Enter hostname" 0 0) || exit 1
clear
: ${hostname:?"hostname cannot be empty"}

user=$(dialog --stdout --inputbox "Enter admin username" 0 0) || exit 1
clear
: ${user:?"user cannot be empty"}

full_name=$(dialog --stdout --inputbox "Enter admin full name" 0 0) || exit 1
clear
: ${full_name:?"full name cannot be empty"}

password=$(dialog --stdout --passwordbox "Enter admin password" 0 0) || exit 1
clear
: ${password:?"password cannot be empty"}
password2=$(dialog --stdout --passwordbox "Enter admin password again" 0 0) || exit 1
clear
[[ "$password" == "$password2" ]] || ( echo "Passwords did not match"; exit 1; )

devicelist=$(lsblk -dplnx size -o name,size | grep -Ev "boot|rpmb|loop" | tac)
device=$(dialog --stdout --menu "Select installation disk" 0 0 0 ${devicelist}) || exit 1
clear

REPO_URL="https://github.com/osafi/aur/releases/download/repository"
MIRRORLIST_URL="https://www.archlinux.org/mirrorlist/?country=US&protocol=https&use_mirror_status=on"

timedatectl set-ntp true

# Update keyring for pacman
pacman -Sy --noconfirm archlinux-keyring

# Install pacman-contrib for the 'rankmirrors' command
pacman -Sy --noconfirm pacman-contrib

echo "Updating mirror list"
curl -s "$MIRRORLIST_URL" | \
    sed -e 's/^#Server/Server/' -e '/^#/d' | \
    rankmirrors -n 5 - > /etc/pacman.d/mirrorlist

### Setup the disk and partitions ###
reco_start=1
reco_end=$(( $reco_start + 1024 ))

boot_start=$reco_end
boot_end=$(( $boot_start + 128 ))

swap_size=$(free --mebi | awk '/Mem:/ {print $2}')
swap_start=$boot_end
swap_end=$(( $swap_start + $swap_size ))

root_start=${swap_end}

parted --script "${device}" -- mklabel gpt \
  mkpart primary ext4 ${reco_start}MiB ${reco_end}MiB \
  mkpart ESP fat32 ${boot_start}MiB ${boot_end}MiB \
  set 2 boot on \
  mkpart primary linux-swap ${swap_start}MiB ${swap_end}MiB \
  mkpart primary ext4 ${root_start}MiB 100%

part_reco="$(ls ${device}* | grep -E "^${device}p?1$")"
part_boot="$(ls ${device}* | grep -E "^${device}p?2$")"
part_swap="$(ls ${device}* | grep -E "^${device}p?3$")"
part_root="$(ls ${device}* | grep -E "^${device}p?4$")"

wipefs "${part_reco}"
wipefs "${part_boot}"
wipefs "${part_swap}"
wipefs "${part_root}"

mkfs.ext4 "${part_reco}"
mkfs.vfat -F32 "${part_boot}"
mkswap "${part_swap}"
mkfs.f2fs -f "${part_root}"

swapon "${part_swap}"
mkdir -p /recovery
mount "${part_reco}" /recovery
mount "${part_root}" /mnt
mkdir -p /mnt/boot
mount "${part_boot}" /mnt/boot

### Install and configure the basic system ###
cat >>/etc/pacman.conf <<EOF
[aur]
SigLevel = Optional TrustAll
Server = $REPO_URL
EOF

pacstrap /mnt osafi-dell-xps

genfstab -t PARTUUID /mnt >> /mnt/etc/fstab

echo "${hostname}" > /mnt/etc/hostname

cat >>/mnt/etc/pacman.conf <<EOF
[aur]
SigLevel = Optional TrustAll
Server = $REPO_URL
EOF

part_reco_uuid=$(blkid -s UUID -o value "$part_reco")

cat >>/mnt/etc/grub.d/40_archiso <<EOF
#!/bin/sh
exec tail -n +3 \$0

search --no-floppy --set=isopart --fs-uuid $part_reco_uuid

menuentry 'ArchLinux Live CD' {
  set imgdevpath='/dev/disk/by-uuid/$part_reco_uuid'
  set isofile='/archlinux.iso'
  loopback loop (\$isopart)\$isofile
  linux (loop)/arch/boot/x86_64/vmlinuz archisodevice=/dev/loop0 img_dev=\$imgdevpath img_loop=\$isofile earlymodules=loop copytoram
  initrd (loop)/arch/boot/x86_64/archiso.img
}
EOF
arch-chroot /mnt chmod +x /etc/grub.d/40_archiso
arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB --removable
arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

curl -L -o /recovery/archlinux.iso https://latest-archlinux.herokuapp.com/iso?region=united_states

arch-chroot /mnt useradd -mU -s /bin/zsh -c "$full_name" -G wheel,uucp,video,audio,storage,games,input "$user"

echo "$user:$password" | chpasswd --root /mnt
echo "root:$password" | chpasswd --root /mnt

arch-chroot /mnt chsh -s /bin/zsh

umount /recovery
umount -R /mnt
